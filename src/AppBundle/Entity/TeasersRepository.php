<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TeasersRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TeasersRepository extends EntityRepository
{

    public function getRandomWithLimit(Groups $group, $limit = 1) {

        $q = $this->createQueryBuilder('t')
            ->select('t')
            ->addSelect('RAND() as HIDDEN rand')
            ->where('t.groups = :group')
            ->andWhere('t.visible = :visible')

            ->setParameter('group', $group)
            ->setParameter('visible', true)

            ->addOrderBy('rand')
            ->setMaxResults($limit)
        ;

        return $q->getQuery()->getResult();
    }

    public function idsByGroups($groupIds = array())
    {
        $q = $this->createQueryBuilder('t')
            ->select('t')
            ->andWhere('t.groups IN (:ids)')
            ->setParameter('ids', $groupIds);

        return $q->getQuery()->getResult();
    }

    public function countForUser(User $user)
    {
        $q = $this->createQueryBuilder('t')
            ->select('COUNT(t)')
            ->where('t.user = :user')
            ->setParameter('user', $user);

        return $q->getQuery()->getSingleScalarResult();
    }

    public function idsForUser(User $user)
    {
        $q = $this->createQueryBuilder('t')
            ->select('t.id')
            ->where('t.user = :user')
            ->setParameter('user', $user);

        return $q->getQuery()->getArrayResult();
    }

    public function topTeasers(User $user)
    {
        $q = $this->createQueryBuilder('t')
            ->select('t')
            ->where('t.user = :user')
            ->setParameter('user', $user);

        return $q->getQuery()->getSingleScalarResult();
    }

}
